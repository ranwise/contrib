# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - performance
    - cloud
    - devops
    - architecture
    - ruby
    - python
    - rust
title: 'RailsConf 2019 - Troubleshoot Your RoR Microservices with Distributed Tracing by Yoshinori Kawasaki'
language: English
recordingDate: 1559264138
description: "RailsConf 2019 - Troubleshoot Your RoR Microservices with Distributed Tracing by Yoshinori Kawasaki\n_______________________________________________________________________________________________\nCloud 66 - Pain Free Rails Deployments\nCloud 66 for Rails acts like your in-house DevOps team to build, deploy and maintain your Rails applications on any cloud or server.\n\nGet $100 Cloud 66 Free Credits with the code: RailsConf-19\n($100 Cloud 66 Free Credits, for the new user only, valid till 31st December 2019)\n\nLink to the website: https://cloud66.com/rails?utm_source=-&utm_medium=-&utm_campaign=RailsConf19\nLink to sign up: https://app.cloud66.com/users/sign_in?utm_source=-&utm_medium=-&utm_campaign=RailsConf19\n_______________________________________________________________________________________________\nIn microservices architecture, it is often challenging to understand interaction and dependencies between individual components involved in an end-user request. Distributed tracing is a technique to improve observability of such microservices behaviors and to help understand performance bottlenecks, to investigate cascaded failures, or in general, to troubleshoot.\n\nIn this talk, I will show how we’ve implemented distributed tracing in Rails apps using OpenCensus, a set of vendor-neutral libraries to collect and export metrics and traces, and real world examples from our system that consists of about 100 microservices built with Ruby, Go, Python, Node and Rust. I will also discuss other methodologies to improve “observability” of Rails apps in microservices and future direction.\n\nIf you feel pain in troubleshooting microservices of Rails, you’ll love distributed tracing."
