# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - elixir
    - elm
    - rust
title: 'Getting Pretty Serious - Louis Pilfold - Elixir.LDN 2017'
language: English
recordingDate: 1503578214
description: "Talk Slides:\nhttps://lpil.uk/talk-slides/getting-pretty-serious/\nProject Page:\nhttps://github.com/lpil/exfmt\n\n\nCode is read many more times than it is written. The harder our code is to read the more time we're stealing from our future selves when we come back to squeeze in another feature, or track down that pesky bug your boss has been complaining about. \n\nA consistent and clear code style is one way to reduce the time cost, but attaining it has its own problems. Team members squabble about exactly where that curly brace is supposed to be placed, and the style guide is long and hard to remember. \n\nA code style linter helps with those problems but now the debate is around linter configuration, and every commit is followed by another, in which you fix the linter telling you off. \n\nHow can we make reading code less expensive without making writing code more expensive? Languages such as Elm, Rust, and Go have automated this problem away using tools that reformat the code for you, making style someone else's problem; a problem that is resolved in milliseconds without manual intervention. Let's explore the technology used in these formatters, and how we might benefit from these ideas in the Elixir community."
