# Editing guidelines: https://github.com/watch-devtube/contrib/#how-to-edit-video-metadata

tags:
    - mobile
    - ios
title: 'Прямая трансляция Avito iOS (17.06.2017)'
recordingDate: 1497711681
description: "Содержание:\n\n3:46 Работа с дизайном в Avito\nАртём Разинов и Инесса Воронина (Avito)\nВ своём докладе мы расскажем, как делать консистентный дизайн быстро и без дублирования в коде и макетах, работая в команде, в которой более двадцати разработчиков и три дизайнера. Кроме того, поговорим о необходимых точках синхронизации, покажем, как мы делим приложение на компоненты, и как нам в этом помогает кодогенерация. Из доклада вы узнаете, на какие детали стоит обратить особое внимание при реализации собственной Дизайн-системы. Пройдемся вдоль и поперек, ведь рассказывать будут разработчик и дизайнер.\n\n50:52 Измерение энергопотребления мобильных\nАлексей Лавренюк и Тимур Торубаров (Yandex)\nНа одной из прошлых встреч мы уже рассказывали о том, как мы научились собирать метрику энергопотребления хардверным способом. Мы сконструировали небольшую схему на базе Arduino, которая измеряет ток, и написали библиотеку для работы с ней. Библиотеку мы выложили в open source. В этот раз мы подробно расскажем как подготовить телефоны, собрать коробочки для замеров и как использовать библиотеку.\n\nПерерыв - Викторина\n\n2:16:00 Тип Property в реактивных интерфейсах\nСергей Анищенко (Juno)\nПринимая во внимание все положительные стороны ФРП, почему бы не начать использовать реактивные компоненты в приложении повсеместно? Я поделюсь опытом применения такого подхода, фокусируясь на незаслуженно обделенном вниманием примитиве из ReactiveSwift под названием Property. Расскажу, почему он оказался настолько полезным при разработке приложения Juno, продемонстрирую паттерны применения типа Property и несколько переиспользуемых компонентов, построенных на его основе.\nКакой-либо опыт использования ФРП фреймворков или понимание базовых концепций ReactiveCocoa/ReactiveSwift помогут извлечь максимум пользы из доклада. Отличной отправной точкой для начинающих мог бы стать обзор реактивных примитивов в ReactiveSwift.\n\nПерерыв\n \n3:05:08 Back-end driven UI\nАлексей Шпирко (Avito)\nНикто не любит заполнять длинные формы. Сложнее заполнения длинных форм только их разработка, поддержка и валидация входных данных. В докладе я расскажу о подходе, в котором можно максимально вынести логику построения сложных форм с мобильного клиента на бекенд и минимизировать количество изменений в коде при постоянно меняющихся бизнес-требованиях.\n\n3:53:00 Автотесты в iOS\nАлександр Смирнов и Никита Анисимов (Mail.ru)\nМы расскажем о процессе разработки мобильных приложений iOS Почты Mail.Ru & myMail и нашей системе для автоматизации проверок приложения. Покажем, как стабильно выполнять более 500 UI-тестов на каждое изменение в проекте, а также обратим внимание на необычные векторы для дополнительных проверок, к которым мы пришли исходя из собственного опыта.\n\n4:40:00 Как всё починить и ничего не сломать: работа со сложным кодом при помощи тестов\nВиктор Брыксин (Yandex)\nЯ расскажу, как внести функциональные изменения в плохо спроектированный код в разумные сроки и при этом ничего не сломать — о возможных проблемах, ошибках в процессе и о том, как с ними справляться.\nВ частности, покажу, как в этом помогают тесты и почему они важны как система раннего обнаружения ошибок. Расскажу о зависимостях, их классификации и о том, какое влияние разные типы зависимостей оказывают на наше понимание работы программы и возможности её протестировать.\nБольшую часть этого доклада я посвятил простым практическим приёмам рефакторинга и модификации кода — для упрощения понимания системы и более лёгкого внесения функциональных изменений."
